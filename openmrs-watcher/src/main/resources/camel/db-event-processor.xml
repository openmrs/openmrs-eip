<routes xmlns="http://camel.apache.org/schema/spring">

    <route id="db-event-processor" errorHandlerRef="watcherErrorHandler">
        <from uri="direct:db-event-processor" />

        <log message="Processing db event: ${body}" loggingLevel="DEBUG" />

        <process ref="id-setting-event-processor" />

        <setProperty name="db-event-destinations">
            <simple>${properties:db-event.destinations}</simple>
        </setProperty>

        <setProperty name="dbEventDestinations">
            <spel>#{new java.util.HashSet()}</spel>
        </setProperty>
        <split>
            <simple>{{db-event.destinations}}</simple>
            <script>
                <spel>#{getProperty('dbEventDestinations').add(body.trim())}</spel>
            </script>
        </split>

        <log loggingLevel="DEBUG" message="All DB Event destinations -> ${exchangeProperty.dbEventDestinations}" />

        <split parallelProcessing="false">
            <simple>${exchangeProperty.db-event-destinations}</simple>
            <setProperty name="db-event-dest">
                <simple>${body.trim()}</simple>
            </setProperty>

            <!-- For deletes and updates, ensure there is no retry items in the queue for this route for the entity
                so that events that happened later don't overwrite those that happened before them

                Note that this ONLY applies to new events and not retries, we don't explicitly check for this because
                the route-retry-count-map will be empty anyways
            -->
            <when>
                <simple>${exchangeProperty.event.operation} != 'c' &amp;&amp; ${exchangeProperty.route-retry-count-map.get(${exchangeProperty.db-event-dest})} > 0</simple>
                <log message="Moving the event to the failure queue because the entity has ${exchangeProperty.route-retry-count-map.get(${exchangeProperty.db-event-dest})} event(s) in the retry queue for route: ${exchangeProperty.db-event-dest}" />
                <setProperty name="retry-event-message">
                    <simple>Cannot process the event because the entity has ${exchangeProperty.route-retry-count-map.get(${exchangeProperty.db-event-dest})} event(s) in the retry queue</simple>
                </setProperty>
                <throwException exceptionType="org.openmrs.eip.EIPException" message="${exchangeProperty.retry-event-message}" />
            </when>

            <!--
                For an order make sure we don't process one where previousOrder or previousOrder is not null and is in
                the retry queue to preserve data integrity, Note that this ONLY applies to new events and not retries
            -->
            <when>
                <simple>${exchangeProperty.retry-item-id} == null &amp;&amp; ${properties:ignore.previous.order.in.error.queue:false} != true</simple>
                <when>
                    <spel>#{T(org.openmrs.eip.Utils).isOrderTable(getProperty('event').tableName)}</spel>
                    <when>
                        <simple>${exchangeProperty.dbEventDestinations.contains(${exchangeProperty.db-event-dest})} == false</simple>
                        <throwException exceptionType="org.openmrs.eip.EIPException" message="No listener route found with name ${exchangeProperty.db-event-dest}" />
                    </when>

                    <!-- TODO After https://issues.openmrs.org/browse/EIP-89 is done, for a deleted orders event get the
                        previousOrderId from the previousState  -->
                    <toD uri="sql:SELECT previous_order_id FROM orders WHERE order_id = ${exchangeProperty.event.primaryKeyId}?dataSource=openmrsDataSource" />

                    <when>
                        <simple>${body.size()} == 1</simple>
                        <setProperty name="previousOrderId">
                            <simple>${body[0].get('previous_order_id')}</simple>
                        </setProperty>
                    </when>

                    <log loggingLevel="DEBUG" message="Previous order id -> ${exchangeProperty.previousOrderId}" />

                    <when>
                        <simple>${exchangeProperty.previousOrderId} != null</simple>
                        <log message="Has previous entity with id -> ${exchangeProperty.previousOrderId}, checking if previous order has no retry items" />

                        <setProperty name="tableNames">
                            <!-- We need to look up failed events for rows in both the parent and subclass tables -->
                            <method beanType="org.openmrs.eip.Utils" method="getTablesInHierarchy(${exchangeProperty.event.tableName})" />
                        </setProperty>

                        <toD uri="jpa:SenderRetryQueueItem?query=SELECT r from SenderRetryQueueItem r WHERE r.event.tableName IN (${exchangeProperty.tableNames}) AND r.event.primaryKeyId='${exchangeProperty.previousOrderId}' AND r.route='${exchangeProperty.db-event-dest}'" />

                        <when>
                            <simple>${body.size()} > 0</simple>
                            <log message="Moving order event to the failure queue because its previous order has ${body.size()} event(s) in the retry queue for destination: ${exchangeProperty.db-event-dest}" />

                            <setProperty name="retryEventMsg">
                                <simple>Cannot process the order event because its previous order has ${body.size()} event(s) in the retry queue</simple>
                            </setProperty>
                            <throwException exceptionType="org.openmrs.eip.EIPException" message="${exchangeProperty.retryEventMsg}" />
                        </when>
                    </when>
                </when>
            </when>

            <log message="Publishing to destination: ${exchangeProperty.db-event-dest}" loggingLevel="DEBUG" />

            <setBody>
                <simple>${exchangeProperty.event}</simple>
            </setBody>

            <toD uri="${exchangeProperty.db-event-dest}" />

            <!-- TODO Move deleting of item from queue to the retry-route, reason it is here is because the splitter in
                the retry-route doesn't work properly with a NoErrorHandler -->
            <when>
                <simple>${exchangeProperty.retry-item-id} != null</simple>
                <log message="Removing from the error queue an item with id: ${exchangeProperty.retry-item-id}" />

                <toD uri="jpa:SenderRetryQueueItem?query=DELETE FROM SenderRetryQueueItem WHERE id = ${exchangeProperty.retry-item-id}" />

                <log loggingLevel="DEBUG" message="Successfully removed from the error queue an item with id: ${exchangeProperty.retry-item-id}" />
            </when>

            <!-- This should possibly be in debezium-event-reader route after we can support multiple destinations
                after https://issues.openmrs.org/browse/EIP-42 is addressed
            -->
            <when>
                <simple>${exchangeProperty.dbzmEvent} != null</simple>
                <log loggingLevel="DEBUG" message="Removing item with id: ${exchangeProperty.dbzmEvent.id} from the debezium event queue" />

                <toD uri="jpa:DebeziumEvent?query=DELETE FROM DebeziumEvent WHERE id = ${exchangeProperty.dbzmEvent.id}" />

                <log loggingLevel="DEBUG" message="Successfully removed item with id: ${exchangeProperty.dbzmEvent.id} from the debezium event queue" />
            </when>
        </split>

        <log message="Done processing db event" loggingLevel="DEBUG" />
    </route>

</routes>
