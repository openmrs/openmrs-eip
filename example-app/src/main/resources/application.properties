# *********************** General EIP sender properties ****************************************************************
#
eip.home=${user.home}${file.separator}.openmrs-eip

camel.springboot.routes-include-pattern=classpath:camel/*.xml,classpath:camel-template/*.xml,classpath:camel-rest/*.xml

spring.jpa.open-in-view=false

eip.watchedTables=person

camel.springboot.main-run-controller=true
# Camel endpoints that need to be notified of DB events
db-event.destinations=direct:event-listener-example

# The interval in milliseconds before the first poll of the debezium event queue by the debezium reader route when the
# application starts.
debezium-event-reader.initial.delay=5000

# The interval in milliseconds between polls of the debezium event queue by the debezium reader route
debezium-event-reader.repeat.interval=5000

# The interval in milliseconds between polls of the retry queue by the retry route
db-event.retry.interval=1800000

# The interval in milliseconds before the first poll of the retry queue by the retry route when the application starts.
db-event.retry.initial.delay=120000
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Logging Configuration ************************************************************************
#
# Uncomment this to use console logging otherwise defaults to the logback.xml file located on the classpath which is
# configured to log to ${eip.home}/logs/openmrs-eip.log
logging.config=classpath:logback-console.xml

# Logging level for the application loggers (all built-in routes and classes)
openmrs.eip.log.level=DEBUG

# Logging level for ONLY application class loggers
logging.level.org.openmrs.eip=${openmrs.eip.log.level}
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Tomcat Configuration *************************************************************************
#
# Server HTTP port.
server.port=8083
# ----------------------------------------------------------------------------------------------------------------------


# *********************** H2 configuration *****************************************************************************
#
# Whether to enable the console
#spring.h2.console.enabled=false

# Path at which the console is available, defaults to /h2-console
# spring.h2.console.path=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the openMRS database to read from *******************************************
#
# The IP address or host name of the OpenMRS MySQL database
openmrs.db.host=127.0.0.1

# The OpenMRS MySQL database port
openmrs.db.port=3307

# The OpenMRS MySQL database name
openmrs.db.name=openmrs
# ----------------------------------------------------------------------------------------------------------------------


# *********************** OpenMRS Datasource config ********************************************************************
#
# Driver class of the openMRS datasource (should not be changed in a usual use)
spring.openmrs-datasource.driverClassName=com.mysql.cj.jdbc.Driver

# Dialect of the openMRS datasource (should not be changed in a usual use)
spring.openmrs-datasource.dialect=org.hibernate.dialect.MySQLDialect

# URL of the openMRS datasource, you don't have to change this value as long you've set the placeholder property values. 
# For compatibility with MySQL 8, append the allowPublicKeyRetrieval=true parameter to the URL. For example;
# spring.openmrs-datasource.jdbcUrl=jdbc:mysql://${openmrs.db.host}:${openmrs.db.port}/${openmrs.db.name}?allowPublicKeyRetrieval=true
spring.openmrs-datasource.jdbcUrl=jdbc:mysql://${openmrs.db.host}:${openmrs.db.port}/${openmrs.db.name}

# User name of the openMRS datasource
spring.openmrs-datasource.username=

# Password of the openMRS datasource
spring.openmrs-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the Management database *****************************************************
#
# Driver class of the management datasource (should not be changed in a usual use)
spring.mngt-datasource.driverClassName=org.h2.Driver

# Dialect of the management datasource (should not be changed in a usual use)
spring.mngt-datasource.dialect=org.hibernate.dialect.H2Dialect

# URL of the management datasource
# When using MySQL 8 for the management database, append the allowPublicKeyRetrieval=true parameter to the URL. For example;
# spring.mngt-datasource.jdbcUrl==jdbc:mysql://mysqlUrl:3306/openmrs_eip_mgt?allowPublicKeyRetrieval=true
spring.mngt-datasource.jdbcUrl=jdbc:h2:file:${eip.home}/db/custom/openmrs_eip_mgt

# User name of the management datasource
spring.mngt-datasource.username=

# Password of the management datasource
spring.mngt-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Debezium Config ******************************************************************************
#
# For details explanations of this properties, please refer to
# https://debezium.io/documentation/reference/connectors/mysql.html#mysql-connector-properties
# Maps to the connect property named database.server.id, MUST match the server-id value in your my.cnf file when you
# enabled mysql binlog, DO NOT change after setting it
debezium.db.serverId=2

# Unique logical name of the MySQL database server, maps to the debezium MySQL connector property named
# database.server.name, DO NOT change after setting it
debezium.db.serverName=Example

# For a detailed explanation of usable Debezium Connector Component options/parameters including the one used in this example, please refer to https://camel.apache.org/components/3.20.x/debezium-mysql-component.html#_endpoint_query_option_additionalProperties
# To add an extra parameter allowPublicKeyRetrieval required by mysql 8, additionalProperties.database option documented in the above link will be used. 
# debezium.extraParameters will be appended to the overall Debezium Connector component URL. Additionally, Debezium Connector Component options/parameters should be prefixed by & symbol. For example;
# debezium.extraParameters=&additionalProperties.database.allowPublicKeyRetrieval=true

# Database username for debezium user account you created to access the MySQL binlog, maps to the debezium MySQL
# connector property named database.user, it's highly recommended to create separate user account as described at
# https://debezium.io/documentation/reference/connectors/mysql.html#setting-up-mysql
debezium.db.user=

# Database password for debezium user account you created to access the MySQL binlog, maps to the debezium MySQL
# connector property named database.password
debezium.db.password=

# Specifies the criteria for running a snapshot when the connector starts, DO NOT change after setting it, maps to the
# debezium MySQL connector property named snapshot.mode
debezium.snapshotMode=schema_only

#Controls whether and how long the connector holds the global MySQL read lock, which prevents any updates to
# the database, while the connector is performing a snapshot
# https://debezium.io/documentation/reference/connectors/mysql.html#mysql-property-snapshot-locking-mode
debezium.snapshotLockingMode=extended


# The 2 properties below are debezium engine specific and are documented at
# https://debezium.io/documentation/reference/development/engine.html#engine-properties
#
# Path to file where offsets are to be stored, maps to property named offset.storage.file.filename, DO NOT change after
# setting it
debezium.offsetFilename=./offsets.txt

# Path to file where offsets are to be stored, maps to property named database.history.file.filename, DO NOT change
# after setting it
debezium.historyFilename=.dbhistory.txt

debezium.reader.maxBatchSize=1000
# ----------------------------------------------------------------------------------------------------------------------

# *********************** OAuth2 Configuration ********************************************************************
#Enabled Oauth when set to true
oauth.enabled=false

#The client Id of the account
oauth.access.token.uri=

#The client Id of the account to use to authenticate
oauth.client.id=

#The client secret of the account to use to authenticate
oauth.client.secret=
#Authentication scope, can be multiple values separated by commas
oauth.client.scope=email
# ----------------------------------------------------------------------------------------------------------------------
