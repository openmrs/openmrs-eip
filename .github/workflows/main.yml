# this build is designed to replicate the Travis CI workflow
name: Build with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published, edited ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        java-version: [ 17 ]

    runs-on: ${{ matrix.platform }}
    env:
      PLATFORM: ${{ matrix.platform }}
      JAVA_VERSION: ${{ matrix.java-version }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install dependencies
        run: mvn clean install -DskipTests=true -Dmaven.javadoc.skip=true --batch-mode --show-version --file pom.xml
      - name: Build with Maven
        run: mvn test --batch-mode --file pom.xml

  deploy-snapshots:
    needs: build
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up OpenMRS Nexus Snapshots
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          server-id: openmrs-repo-snapshots
          server-username: MAVEN_REPO_USERNAME
          server-password: MAVEN_REPO_API_KEY
      - name: Publish to OpenMRS Nexus Snapshots
        run: mvn deploy -DskipTests=true --batch-mode --show-version --file pom.xml
        env:
          MAVEN_REPO_USERNAME: ${{ secrets.MAVEN_REPO_USERNAME }}
          MAVEN_REPO_API_KEY: ${{ secrets.MAVEN_REPO_API_KEY }}

  release:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up OpenMRS Nexus Releases
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          server-id: openmrs-repo-releases
          server-username: MAVEN_REPO_USERNAME
          server-password: MAVEN_REPO_API_KEY
      - name: Publish to OpenMRS Nexus Releases
        run: mvn deploy -DskipTests=true --batch-mode --show-version --file pom.xml
        env:
          MAVEN_REPO_USERNAME: ${{ secrets.MAVEN_REPO_USERNAME }}
          MAVEN_REPO_API_KEY: ${{ secrets.MAVEN_REPO_API_KEY }}
