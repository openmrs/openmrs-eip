########################################################################################################################
#                                                                                                                      #
# This file provides a configuration template for a custom OpenMRS watcher application, it contains in-line            #
# documentation for each property. For the spring core properties, please refer to the spring boot docs for more       #
# details.                                                                                                             #
#                                                                                                                      #
# NOTE: For the properties that have preset values, it's recommended not to change them unless you have to, some of    #
# them have placeholders of the form ${my.other.prop.key}, it means all you need to do is set values for the property  #
# key in this file named my.other.prop.key                                                                             #
#                                                                                                                      #
########################################################################################################################


# *********************** General EIP sender properties ****************************************************************
#
eip.home=${user.home}${file.separator}.openmrs-eip

# A comma separated list of database tables names to watch for changes
eip.watchedTables=

# Camel endpoints that need to be notified of DB events
db-event.destinations=

# The interval in milliseconds before the first poll of the debezium event queue by the debezium reader route when the
# application starts.
debezium-event-reader.initial.delay=5000

# The interval in milliseconds between polls of the debezium event queue by the debezium reader route
debezium-event-reader.repeat.interval=60000

# The interval in milliseconds between polls of the retry queue by the retry route
db-event.retry.interval=1800000

# The interval in milliseconds before the first poll of the retry queue by the retry route when the application starts.
db-event.retry.initial.delay=60000

# When set to true, it disables the feature where an order is not processed when its previous order is still in the
# error queue
ignore.previous.order.in.error.queue=

# A comma-separated list of table names with changed_by and data_changed columns that are eligible for filtering in case
# the only changed column values are changed_by and date_changed
filter.auditable.tables=

# The delay in milliseconds between reconnection attempts to the OpenMRS DB when it becomes unavailable
openmrs.db.reconnect.watchdog.delay=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Logging Configuration ************************************************************************
#
# Uncomment this to use console logging otherwise defaults to the logback.xml file located on the classpath which is
# configured to log to ${eip.home}/logs/openmrs-eip.log
#logging.config=classpath:logback-console.xml

# Logging level for the application loggers (all built-in routes and classes)
openmrs.eip.log.level=INFO

# Logging level for ONLY application class loggers, feel free to add more logger configurations
logging.level.org.openmrs.eip=${openmrs.eip.log.level}
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Tomcat Configuration *************************************************************************
#
# Server HTTP port, the H2 database console is exposed at this port
server.port=
# ----------------------------------------------------------------------------------------------------------------------


# ****************************** Actuator Configuration ****************************************************************
#
#Whether to enable or disable all actuator endpoints by default.
management.endpoints.enabled-by-default=false
#management.endpoint.prometheus.enabled=true
#management.endpoint.health.enabled=true
#management.endpoint.health.show-details=always
#management.endpoints.web.exposure.include=health,prometheus
# ----------------------------------------------------------------------------------------------------------------------


# *********************** H2 configuration *****************************************************************************
#
# Whether to enable the console
#spring.h2.console.enabled=false

# Path at which the console is available, defaults to /h2-console
# spring.h2.console.path=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the openMRS database to read from *******************************************
#
# The IP address or host name of the OpenMRS MySQL database
openmrs.db.host=

# The OpenMRS MySQL database port
openmrs.db.port=

# The OpenMRS MySQL database name
openmrs.db.name=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** OpenMRS Datasource config ********************************************************************
#
# Driver class of the openMRS datasource (should not be changed in a usual use)
spring.openmrs-datasource.driverClassName=com.mysql.cj.jdbc.Driver

# Url of the openMRS datasource, you don't have to change this value as long you've set the placeholder property values
spring.openmrs-datasource.jdbcUrl=jdbc:mysql://${openmrs.db.host}:${openmrs.db.port}/${openmrs.db.name}

# User name of the openMRS datasource
spring.openmrs-datasource.username=

# Password of the openMRS datasource
spring.openmrs-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Configuration of the Management database *****************************************************
#
# Driver class of the management datasource (should not be changed in a usual use)
spring.mngt-datasource.driverClassName=

# Dialect of the management datasource (should not be changed in a usual use)
spring.mngt-datasource.dialect=

# Url of the management datasource
spring.mngt-datasource.jdbcUrl=

# User name of the management datasource
spring.mngt-datasource.username=

# Password of the management datasource
spring.mngt-datasource.password=
# ----------------------------------------------------------------------------------------------------------------------


# *********************** Debezium Config ******************************************************************************
#
# For details explanations of this properties, please refer to
# https://debezium.io/documentation/reference/connectors/mysql.html#mysql-connector-properties
# Maps to the connect property named database.server.id, MUST match the server-id value in your my.cnf file when you
# enabled mysql binlog, DO NOT change after setting it
debezium.db.serverId=

# Unique logical name of the MySQL database server, maps to the debezium MySQL connector property named
# database.server.name, DO NOT change after setting it
debezium.db.serverName=

# Database username for debezium user account you created to access the MySQL binlog, maps to the debezium MySQL
# connector property named database.user, it's highly recommended to create separate user account as described at
# https://debezium.io/documentation/reference/connectors/mysql.html#setting-up-mysql
debezium.db.user=

# Database password for debezium user account you created to access the MySQL binlog, maps to the debezium MySQL
# connector property named database.password
debezium.db.password=

# Specifies the criteria for running a snapshot when the connector starts, DO NOT change after setting it, maps to the
# debezium MySQL connector property named snapshot.mode
debezium.snapshotMode=schema_only

#Controls whether and how long the connector holds the global MySQL read lock, which prevents any updates to
# the database, while the connector is performing a snapshot
# https://debezium.io/documentation/reference/connectors/mysql.html#mysql-property-snapshot-locking-mode
debezium.snapshotLockingMode=extended


# Maximum size of each batch of source records to be read by debezium from the binlog files, maps to the
## debezium MySQL connector property named max.batch.size
#https://debezium.io/documentation/reference/1.6/connectors/mysql.html#mysql-property-max-batch-size
debezium.reader.maxBatchSize=2048

# The 2 properties below are debezium engine specific and are documented at
# https://debezium.io/documentation/reference/development/engine.html#engine-properties
#
# Path to file where offsets are to be stored, maps to property named offset.storage.file.filename, DO NOT change after
# setting it
debezium.offsetFilename=${eip.home}${file.separator}.debezium/offsets.txt

# Path to file where offsets are to be stored, maps to property named database.history.file.filename, DO NOT change
# after setting it
debezium.historyFilename=${eip.home}${file.separator}.debezium/dbhistory.txt
# ----------------------------------------------------------------------------------------------------------------------


# *************************************** Oauth Configuration **********************************************************
#
#Enabled Oauth when set to true
oauth.enabled=false

#The client Id of the account
oauth.access.token.uri=

#The client Id of the account to use to authenticate
oauth.client.id=

#The client secret of the account to use to authenticate
oauth.client.secret=

#Authentication scope, can be multiple values separated by commas
oauth.client.scope=
# ----------------------------------------------------------------------------------------------------------------------
